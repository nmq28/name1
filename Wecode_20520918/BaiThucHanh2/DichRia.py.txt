def shift_edges(matrix):
    r = len(matrix)
    c = len(matrix[0])
    result = [row[:] for row in matrix]  # Copy the matrix

    # Define the edges
    top_edge = result[0][:]
    bottom_edge = result[-1][:]
    left_edge = [result[i][0] for i in range(r)]
    right_edge = [result[i][c-1] for i in range(r)]

    # Shift edges according to the problem statement
    # Edge 0: top edge clockwise shift
    result[0][1:c] = top_edge[0:c-1]
    result[0][0] = top_edge[-1]

    # Edge 1: bottom edge counter-clockwise shift
    result[-1][0:c-1] = bottom_edge[1:c]
    result[-1][c-1] = bottom_edge[0]

    # Edge 2: left edge clockwise shift
    for i in range(r):
        result[i][0] = left_edge[(i + 1) % r]

    # Edge 3: right edge counter-clockwise shift
    for i in range(r):
        result[i][c-1] = right_edge[(i - 1 + r) % r]

    return result

def main():
    import sys
    input = sys.stdin.read().strip().split('\n')
    r, c = map(int, input[0].split())
    matrix = []
    for i in range(1, r+1):
        matrix.append(list(map(int, input[i].split())))

    result = shift_edges(matrix)

    for row in result:
        print(' '.join(map(str, row)))

if __name__ == "__main__":
    main()
